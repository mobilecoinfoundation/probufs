name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  buf-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: bufbuild/buf-setup-action@v1.15.0
        with:
          github_token: ${{ github.token }}
      - uses: bufbuild/buf-lint-action@v1

  rustfmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: r7kamura/rust-problem-matchers@v1
      - run: cargo fmt --all -- --check

  markdown-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: xt0rted/markdownlint-problem-matcher@v2
      - uses: DavidAnson/markdownlint-cli2-action@v9
        with:
          globs: "**/*.md"

  deny:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}

  sort:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-sort
      - run: cargo sort --workspace --check >/dev/null

  clippy:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        rust:
          - stable
          - beta
    # Prevent beta warnings from causing CI failure
    continue-on-error: ${{ matrix.rust == 'beta' }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - uses: r7kamura/rust-problem-matchers@v1
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: install protoc plugins
        run: |
          cargo +${{ matrix.rust }} install protoc-gen-prost
          cargo +${{ matrix.rust }} install protoc-gen-tonic
      - run: cargo +${{ matrix.rust }} clippy --all --all-features -- -D warnings

  build:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly-2023-01-04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: r7kamura/rust-problem-matchers@v1
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: install protoc plugins
        run: |
          cargo +${{ matrix.rust }} install protoc-gen-prost
          cargo +${{ matrix.rust }} install protoc-gen-tonic
      - run: cargo +${{ matrix.rust }} build --release

  test:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly-2023-01-04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: r7kamura/rust-problem-matchers@v1
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: install protoc plugins
        run: |
          cargo +${{ matrix.rust }} install protoc-gen-prost
          cargo +${{ matrix.rust }} install protoc-gen-tonic
      - run: cargo +${{ matrix.rust }} test --release

  doc:
    runs-on: ubuntu-22.04
    needs:
      - "rustfmt"
      - "markdown-lint"
    strategy:
      matrix:
        rust:
          - stable
          - beta
    # Prevent beta warnings from causing CI failure
    continue-on-error: ${{ matrix.rust == 'beta' }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: r7kamura/rust-problem-matchers@v1
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: install protoc plugins
        run: |
          cargo +${{ matrix.rust }} install protoc-gen-prost
          cargo +${{ matrix.rust }} install protoc-gen-tonic
      - run: cargo +${{ matrix.rust }} doc --release --no-deps

  notify:
    runs-on: ubuntu-latest
    if: failure() && ${{ github.event_name }} == 'push'
    needs:
      - buf-lint
      - rustfmt
      - markdown-lint
      - deny
      - sort
      - clippy
      - build
      - test
      - doc
    steps:
      - name: Notify Discord on failure
        uses: sarisia/actions-status-discord@v1
        with:
          username: "Github Actions"
          status: Failure
          nodetail: true
          title: "Workflow: ${{ github.workflow }}"
          url: ${{ github.repositoryUrl }}/actions/runs/${{ github.run_id }}
          description: |
            [@${{ github.actor }}](${{ github.server_url }}/${{ github.actor }}] was the last one to touch ${{ github.repository }}, is all I'm saying...
          avatar_url: "https://media0.giphy.com/media/oe33xf3B50fsc/200.gif"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
